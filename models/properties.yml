version: 2

sources:
  - name: "scooters_raw"
    description: "Raw data provided by scooters service"
    loader: "https://t.me/inzhenerka_dbt_bot"
    tables:
      - name: "trips"
        description: "Scooter trips"
        loaded_at_field: "finished_at"
        freshness:
          warn_after:
            count: 1
            period: "day"
          error_after:
            count: 3650
            period: "day"
        columns:
          - name: "user_id"
            description: "User identifier"
            data_tests:
              - not_null
              - relationships:
                  name: "every_trip_has_user"
                  to: "source('scooters_raw', 'users')"
                  field: "id"
      - name: "users"
        description: "Users of scooter service"
        columns:
          - name: "sex"
            description: "User gender"
            data_tests:
              - accepted_values:
                  values: [ "M","F" ]
              - not_null:
                  config:
                    severity: "warn"
      - name: "events"
        description: "Users events"

models:
  - name: "trips_prep"
    description: "Trips prepared for analysis"
    config:
      materialized: "view"
    data_tests:
    - row_count_equal:
        compare_model: "source('scooters_raw', 'trips')"

  - name: "trips_stat"
    description: "Overall trips statistics"

  - name: "trips_age_daily"
    description: "Average daily trips per age category "
    data_tests:
      - unique:
          column_name: "date::text || age::text"
      - unique_key: 
          columns: ["date", "age"]

  - name: "trips_age_daily_stat"
    description: "Average trips and revenue per each age category"

  - name: "trips_geom"
    description: "Starting and ending trips coordinates"
    config:
      materialized: "view"

  - name: "parking_start_stat"
    description: "Trip start parking statistics by 500 m hexagons"

  - name: "parking_finish_stat"
    description: "Trip finish parking statistics by 10 m hexagons"

  - name: "companies"
    description: "Scooters models aggregated info per company"

  - name: "companies_trips"
    description: "Trips statistics per company"
    columns:
      - name: "company"
        description: "Scooters manufacturing company"
        data_tests:
          - unique

  - name: "trips_concurrency"
    description: "Number of concurent trips in time"
    config:
      materialized: "incremental"



  - name: "trips_users"
    description: "Prepared trips enriched with users data"
    config:
      materialized: "incremental"
      post-hook:
        - "analyze dbt.trips_users"
        - sql: "vacuum dbt.trips_users"
          transaction: false

  - name: "events_clean"
    description: "User events without duplicates"
    config:
      materialized: "incremental"
      strategy: "merge"
      unique_key: ["user_id", "timestamp", "type_id"]

  - name: "events_full"
    description: "Table with all events joined with event types"
    config:
      materialized: "view"

  - name: "events_stream"
    description: "User events prepared for product analysis"
    config:
      materialized: "ephemeral"

  - name: "events_stat"
    description: "How many users reject due to long search"
  - name: "trips_age_groups"
    description: "Users trips analytics based on age groups"
  
  - name: "trips_stat_daily"
    description: "Daily agreggated trips information"
    config:
      indexes:
        - columns: [date]

  - name: "events_prep"
    description: "User events prepared for following processing"
    config:
      materialized: "view"
    columns:
      - name: "date"
        description: |
          Date of event derived from timestamp.
          Imitates Hive-styled partitioning of events by date.
          It is needed for efficient incremental processing by engines
          with partitioning support (i.e. Trino).

  - name: "events_clean_v2"
    description: "User events without duplicates"
    config:
      materialized: "incremental"
      strategy: "merge"
      unique_key: [ "user_id", "timestamp", "type_id" ]
      meta:
        incrementality:
        start_date: "2023-06-01"
        days_max: 60

  - name: "sex_age_pivot"
    description: "Pivot table to analyse number of trips per users sex"
    data_tests:
      - unique_key: 
          columns: ["age"]
      - dbt_expectations.expect_table_column_count_to_equal:
          value: 3

    columns:
      - name: "age"
        description: "Numerical age of users"
        data_tests: 
          - "dbt_utils.not_constant"

  - name: "book_scooter_retention"
    description: >
      Retention analytics from searching to booking a ride
      on 1, 7, 14, 30 days

  - name: "metricflow_time_spine"
    description: "Time spine calendar for metricflow"

